@page "/recurrent"
@attribute [Authorize(Roles = "Administrator,MinistryStaff,BudgetStaff")]
@using DataAccessLibrary.Models;
@using DataAccessLibrary;
@inject IDbData _db;

<h1>Recurrent Expenditure Estimates</h1>

<div class="input-group mb-3">
  <label class="input-group-text" for="inputGroupSelect01">Estimates for Year</label>
  <select class="form-select" id="inputGroupSelect01"  @bind=year_selected >
    <option value="0" selected>Choose...</option>
    @if (years is null)
        {
            <option selected>Loading...</option>
        }
    else 
        {
       @foreach (var year in years)
            {
                <option value=@year.year>@year.displayYear @(year.year_closed? "(Year Closed)":"")</option>
            }
        }
  </select>  
</div>




@if (@year_selected != 0)
{
    <Rec_Level1 year=@year_selected></Rec_Level1>
}


@code {
    private List<ProcessingYearModel> years;
    private int year_selected=0;


    protected override async Task OnInitializedAsync()
    {
        years = await _db.GetYears();
        //if dataentry then remove years which are not ready
        /*if ()
        {
        years = years.FindAll(e => e.ready_for_data_entry == false);
    }*/
    }
   

}
