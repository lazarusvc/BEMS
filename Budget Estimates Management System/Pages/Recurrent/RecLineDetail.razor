@using Budget_Estimates_Management_System.Models;
@using DataAccessLibrary.Models;
@using DataAccessLibrary;
@inject IDbData _db;
@inject IRecEstimateData _rdb;

<tr> 
          <th scope="row"   @onclick="e => this.Collapsed = !this.Collapsed" style="cursor:pointer;"> <span class= "@(this.Collapsed ? "oi oi-caret-bottom" : "oi oi-caret-top")" aria-hidden="true" style="@(this.Collapsed ? "color:black" : "color:blue")"></span> @item.item</th>
          <td @onclick="e => this.Collapsed = !this.Collapsed" style="cursor:pointer;">@item.itemName</td>
          <td class="text-end" style="background-color:lightgray">@item.year0.ToString("C")</td>
          <td class="text-end"><b>@item.year1.ToString("C")</b></td>
          <td class="text-end">@item.year2.ToString("C")</td>
          <td class="text-end">@item.year3.ToString("C")</td>
        </tr>
        @if (!Collapsed)
        {
             @if  (accounts is null)
                {
                    <tr>
                                <td colspan="6">
                                       No entries found for @year - @(year+1)
                                </td>
                            </tr>   
                      
                }
                else
                {
                         @foreach (var account in accounts)
                        {
                            <tr>
                                <td colspan="6">
                                       @account.comment
                                </td>
                            </tr>    
                        }
                }
        }


@code {
    [Parameter]
    public GroupingModel item { get; set; }
    [Parameter]
    public int year { get; set; }
    [Parameter]
    public string ministry { get; set; }
    [Parameter]
    public string program { get; set; }
    [Parameter]
    public string subprogram { get; set; }

    public bool Collapsed = true;

    List<BudgetEstimatesModel> accounts;

     protected override async Task OnInitializedAsync()
    {
        //TODDO: GET list of accounts
        accounts= await _rdb.GetDataForYear(year,ministry,program,subprogram,item.item);
        
    }


}
