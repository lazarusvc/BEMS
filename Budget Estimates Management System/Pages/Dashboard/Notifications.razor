@using DataAccessLibrary.Models;
@using DataAccessLibrary;
@inject INotificationData _ndb;
@inject AuthenticationStateProvider authStateProvider;
@attribute [Authorize(Roles = "Administrator,MinistryStaff,BudgetStaff")];

<div class="card">
        <div class="card-header" style="background-color:lightcyan">
    <h5 class="card-title" >Notifications</h5>
  </div>
   <div class="overflow-auto"  style="height: 250px;">
      <div class="list-group">
          
         @if (notifications is null )
            {
                <li class="list-group-item">No News is good news</li>
            }
          else{
                 @foreach (var item in notifications)
                {
                    @if (item.featured)
                    { <div class="list-group-item list-group-item-action">
                         <div class="d-flex w-100 justify-content-between" style="background-color:lightgoldenrodyellow">
                          <h5 class="mb-1"><b>@item.header</b> </h5>
                        </div>
                        <p class="mb-1">@item.message</p>
                        </div>

                    } else
                    {
                        <div class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between">
                          <h5 class="mb-1"><b>@item.header</b> </h5>
                        </div>
                        <p class="mb-1">@item.message</p>
                        </div>
   
                    }
                    
                }
            }          
      </div>
   </div>                      
   
</div>

@code {

    public List<NotificationModel>? notifications;

 
    private string username = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        username = authState.User.Identity.Name;
        notifications =  await _ndb.GetNotifications(username);
        
    }


}
