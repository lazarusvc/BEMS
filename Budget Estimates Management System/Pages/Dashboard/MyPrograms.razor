@inject AuthenticationStateProvider authStateProvider;
@using DataAccessLibrary.Models;
@using DataAccessLibrary;
@inject IDbData _db;

<div class="card" style="width: 18rem;">
    <div class="card-body">
      <div class="card-header">
    <h5 class="card-title">My Programs</h5>
  </div>
    
      <ul class="list-group list-group-flush">
          
        @if (accessTo is null || accessTo.Count==0)
        {
           <li class="list-group-item">No access yet</li>
        }
        else {
             @foreach (var item in accessTo)
            {
                <li class="list-group-item"><b>@item.Name</b> @item.Description</li>
            }
        }
      </ul>
  </div>
</div>

@code {

    private List<ListItemModel> accessTo;
    private string username;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        username = authState.User.Identity.Name;
        accessTo =  await _db.GetUserPrograms(username);
    }

}
